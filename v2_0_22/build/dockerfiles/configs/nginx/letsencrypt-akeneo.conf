server {
    server_name {{DOMAIN}};
    listen 80;
    return 301 https://$host$request_uri;
}
server {
  listen   443 ssl;
	root /home/akeneo/web;

	# Make site accessible from http://localhost/
	server_name {{DOMAIN}};
	ssl_certificate /etc/letsencrypt/live/{{DOMAIN}}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{DOMAIN}}/privkey.pem;
  ssl on;
  ssl_session_timeout 24h;
  ssl_session_cache shared:SSL:2m;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers kEECDH+AES128:kEECDH:kEDH:-3DES:kRSA+AES128:kEDH+3DES:DES-CBC3-SHA:!RC4:!aNULL:!eNULL:!MD5:!EXPORT:!LOW:!SEED:!CAMELLIA:!IDEA:!PSK:!SRP:!SSLv2;
  ssl_prefer_server_ciphers on;
  add_header Strict-Transport-Security "max-age=31536000;";
  add_header Content-Security-Policy-Report-Only "default-src https:; script-src https: 'unsafe-eval' 'unsafe-inline'; style-src https: 'unsafe-inline'; img-src https: data:; font-src https: data:; report-uri /csp-report";
 # ssl_dhparam /etc/nginx/dhparam.pem;

 # Disable sendfile as per https://docs.vagrantup.com/v2/synced-folders/virtualbox.html
	sendfile off;

	# Add stdout/stderr logging
    access_log /proc/self/fd/1;
    error_log /proc/self/fd/2;

	location / {
        # try to serve file directly, fallback to app.php
        try_files $uri /app.php$is_args$args;
    }

	error_page 404 /404.html;

    location = /404.html {
        root /var/www/errors;
        internal;
    }

    location ^~ /ngd-style.css {
        alias /var/www/errors/style.css;
        access_log off;
    }

    location ^~ /ngd-sad.svg {
        alias /var/www/errors/sad.svg;
        access_log off;
    }

    # PROD
    location ~ ^/app\.php(/|$) {

        # Uncomment if using UNIX socket
        #fastcgi_pass unix:/var/run/php/php7.1-fpm.sock;
        fastcgi_pass  127.0.0.1:9000;

        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;

       # When you are using symlinks to link the document root to the
       # current version of your application, you should pass the real
       # application path instead of the path to the symlink to PHP
       # FPM.
       # Otherwise, PHP's OPcache may not properly detect changes to
       # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
       # for more information).
       fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
       fastcgi_param DOCUMENT_ROOT $realpath_root;
       # Prevents URIs that include the front controller. This will 404:
       # http://domain.tld/app.php/some-path
       # Remove the internal directive to allow URIs like this
       internal;
    }

   # return 404 for all other php files not matching the front controller
   # this prevents access to other php files you don't want to be accessible.
   location ~ \.php$ {
     	return 404;
   }


	# deny access to . files, for security
	#
	location ~ /\. {
    	log_not_found off;
    	deny all;
	}

}
